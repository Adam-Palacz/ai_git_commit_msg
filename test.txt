diff --git a/git_commit_msg.py b/git_commit_msg.py
index 24e0449..91d6d33 100644
--- a/git_commit_msg.py
+++ b/git_commit_msg.py
@@ -12,7 +12,10 @@ load_dotenv()
 logger = logging.getLogger(__name__)
 logging.basicConfig(level=logging.INFO)
 
+MAX_WORDS = 5
+
 AI_MODEL = "claude-3-haiku-20240307"
+
 AI_SYSTEM_TEMPLATE = """
 You will be acting as a helpful software developer that generates descriptive
 git commit messages based on git diff output.
@@ -20,7 +23,7 @@ Here are the steps to follow:
 First, I will provide the git diff output for the commit in question:
 
 <git_diff>
-{{GIT_DIFF}}
+GIT_DIFF
 </git_diff>
 
 Carefully review this diff and identify the key changes
@@ -29,7 +32,8 @@ that were made in this commit. Consider things like:
 - For modified files, what was the nature of the changes
   (new features, bug fixes, refactoring, etc.)
 - Are the changes related to a particular feature, task or bugfix
-- Generated message should be very general and very simple, only few words
+- Generated message should be very general and very simple
+- Dont use more than {} words in message
 - Avoid any additional messages and mentions about git diff in response
 
 Write your generated commit message as JSON {\"commit_message\": \"message\"}.
@@ -37,7 +41,7 @@ Example: {\"commit_message\": \"Add new resource group rg-wsb-etc\"}
 """
 
 
-def generate_ai_commit_message(git_diff: str) -> str:
+def generate_ai_commit_message(git_diff: str, MAX_WORDS=MAX_WORDS: int) -> str:
     """
     Generate a commit message using the AI
     model based on the provided git diff.
@@ -54,7 +58,7 @@ def generate_ai_commit_message(git_diff: str) -> str:
         model=AI_MODEL,
         max_tokens=1500,
         temperature=0,
-        system=AI_SYSTEM_TEMPLATE,
+        system=AI_SYSTEM_TEMPLATE.format(MAX_WORDS),
         messages=[
             {
                 "role": "user",
@@ -81,18 +85,17 @@ def main():
     git_diff_file = script_dir / "git_diff.txt"
 
     try:
-        os.system(f'git diff -- . > {str(git_diff_file)}')
+        output = subprocess.check_output(['git', 'diff', '--', '.']).decode('utf-8')
 
-        with open(git_diff_file, "r") as file:
-            git_diff = "<git_diff>\n" + file.read() + "\n<git_diff>"
+        git_diff = "<git_diff>\n" + output + "\n<git_diff>"
 
         commit_message = generate_ai_commit_message(git_diff)
 
-        print("\n#######")
+        print("\n#########")
         print(commit_message)
-        print("\n#######")
+        print("\n#########")
 
-        git_diff_file.unlink(missing_ok=True)
+        # git_diff_file.unlink(missing_ok=True)
         subprocess.run(["git", "add", "."], check=True)
         subprocess.run(["git", "commit", "-m", commit_message], check=True)
         subprocess.run(["git", "push"], check=True)
